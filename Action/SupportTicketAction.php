<?php
/**
 * This class has been generated by TheliaStudio
 * For more information, see https://github.com/thelia-modules/TheliaStudio
 */

namespace SupportTicket\Action;

use SupportTicket\Action\Base\SupportTicketAction as BaseSupportTicketAction;
use SupportTicket\Event\SupportTicketEvent;
use SupportTicket\Model\SupportTicket;
use Thelia\Core\Template\ParserInterface;
use Thelia\Log\Tlog;
use Thelia\Mailer\MailerFactory;
use Thelia\Model\ConfigQuery;
use Thelia\Model\CustomerQuery;
use Thelia\Model\Lang;

/**
 * Class SupportTicketAction
 * @package SupportTicket\Action
 */
class SupportTicketAction extends BaseSupportTicketAction
{

    protected ParserInterface $parser;

    protected MailerFactory $mailer;

    public function __construct(ParserInterface $parser, MailerFactory $mailer)
    {
        $this->parser = $parser;
        $this->mailer = $mailer;
    }

    public function create(SupportTicketEvent $event): void
    {
        parent::create($event);

        // send email
        $this->sendMail($event->getSupportTicket(), false);
    }

    protected function sendMail(SupportTicket $supportTicket, $toCustomer = true): void
    {
        $contactEmail = ConfigQuery::read('store_email');

        if (true === $toCustomer) {
            $emailTemplate = 'supportticket_customer';
            $customer = CustomerQuery::create()->findPk($supportTicket->getCustomerId());
            $locale = $customer->getCustomerLang()->getLocale();
            $emailTo = [ $customer->getEmail() => $customer->getFirstName() . ' ' . $customer->getLastName() ];
        } else {
            $emailTemplate = 'supportticket_administrator';
            $locale = Lang::getDefaultLanguage()->getLocale();
            $emailTo = [ ConfigQuery::getStoreEmail() => ConfigQuery::getStoreName() ];
        }

        if ($contactEmail) {
            $this->mailer->sendEmailMessage(
                $emailTemplate,
                [ ConfigQuery::getStoreEmail() => ConfigQuery::getStoreName() ],
                $emailTo,
                ['locale' => $locale, 'ticket' => $supportTicket]
            );

            Tlog::getInstance()->debug("Sending support ticket mail to " . array_key_first($emailTo));
        } else {
            Tlog::getInstance()->debug("Support ticket message no contact email ");
        }
    }

    public function update(SupportTicketEvent $event): void
    {
        $model = $this->getSupportTicket($event);

        $sendEmail = false;

        if ($model->getStatus() === SupportTicket::STATUS_NEW) {
            $sendEmail = true;
        } elseif ($model->getStatus() === SupportTicket::STATUS_REPLIED) {
            // deactivate the date, already set
            $event->setRepliedAt(null);
        } else {
            $event->setStatus(null);
        }

        parent::update($event);

        if (true === $sendEmail) {
            $this->sendMail($event->getSupportTicket(), true);
        }
    }
}
