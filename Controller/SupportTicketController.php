<?php
/**
 * This class has been generated by TheliaStudio
 * For more information, see https://github.com/thelia-modules/TheliaStudio
 */

namespace SupportTicket\Controller;

use DateTime;
use SupportTicket\Controller\Base\SupportTicketController as BaseSupportTicketController;
use SupportTicket\Event\SupportTicketEvent;
use SupportTicket\Model\SupportTicket;
use Symfony\Component\EventDispatcher\EventDispatcherInterface;
use Symfony\Component\HttpFoundation\RedirectResponse;
use Symfony\Component\HttpFoundation\Response;
use Thelia\Core\HttpFoundation\Request;
use Thelia\Core\Security\AccessManager;

/**
 * Class SupportTicketController
 * @package SupportTicket\Controller
 */
class SupportTicketController extends BaseSupportTicketController
{
    /**
     * Delete ticket from back-office
     *
     * @param Request $request
     * @param EventDispatcherInterface $eventDispatcher
     * @return mixed|string|RedirectResponse|Response|\Thelia\Core\HttpFoundation\Response|null
     */
    public function deletePost(Request $request, EventDispatcherInterface $eventDispatcher)
    {
        // Check current user authorization
        if (null !== $response = $this->checkAuth($this->resourceCode, $this->getModuleCode(), AccessManager::DELETE)) {
            return $response;
        }

        $eventDispatcher->dispatch(
            (new SupportTicketEvent())->setId($request->get("support_ticket_id")),
            $this->deleteEventIdentifier
        );

        return $this->redirectToListTemplate();
    }

    protected function getUpdateEvent($formData): SupportTicketEvent
    {
        $event = new SupportTicketEvent();

        $event->setId($formData["id"]);
        $event->setAdminId($formData["admin_id"]);
        $event->setSubject($formData["subject"]);
        $event->setMessage($formData["message"]);
        $event->setResponse($formData["response"]);
        $event->setComment($formData["comment"]);

        $event->setStatus(SupportTicket::STATUS_REPLIED);
        $event->setRepliedAt(new DateTime('now'));

        return $event;
    }
}
